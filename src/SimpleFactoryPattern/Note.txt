简单工厂模式

定义一个工厂类,它可以根据参数的不同返回不同类的实例,被创建的实例通常都具有共同的父类.

优点
(1)工厂类包含必要的判断逻辑,可以决定在什么时候创建哪一个产品类的实例,客户
端可以免除直接创建产品对象的职责,而仅仅“消费”产品,简单工厂模式实现了对象创建和
使用的分离.
(2)客户端无须知道所创建的具体产品类的类名,只需知道具体产品类所对应的参
数即可,对于一些复杂的类名,通过简单工厂模式可以在一定程度上减少使用者的记
忆量.
(3)通过引人配置文件,可以在不修改任何客户端代码的情况下更换和增加新的具体
产品类,在一定程度上提高了系统的灵活性。

缺点
(1)由于工厂类集中了所有产品的创建逻辑,职责过重,一旦不能正常工作,整个系统
都要受到影响。
(2)使用简单工厂模式势必会增加系统中类的个数(引人了新的工厂类),增加了系统
的复杂度和理解难度。
(3)系统扩展困难,一旦添加新产品不得不修改工厂逻辑,在产品类型较多时,有可郎
造成工厂逻辑过于复杂,不利于系统的扩展和维护。
(4)简单工厂模式由于使用了静态工厂方法,造成工厂角色无法形成基于继承的等级
结构。在C#语言中,不能通过类的实例对象来访问静态方法和静态变量,无法在客户饰1
码中针对工厂父类编程,而在运行时使用工厂子类对象来覆盖父类,因此,工厂类不能得到
很好的扩展.

适用环境
(1)工厂类负责创建的对象比较少,由于创建的对象较少,不会造成工厂方法中的业务
逻辑过于复杂。
(2)客户端只知道传人工厂类的参数,对于如何创建对象并不关心。


